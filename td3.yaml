openapi: 3.0.3
info:
  title: Library API
  description: API for managing books and authors in a library system.
  version: 1.1.0
servers:
  - url: https://api.library.com/v1
    description: Production server

paths:
  /books:
    get:
      summary: Get all books with pagination
      parameters:
        - $ref: '#/components/parameters/queryPagination'
        - $ref: '#/components/parameters/pathPagination'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/BaseResponse'
                  - type: object
                    properties:
                      body:
                        type: array
                        items:
                          $ref: '#/components/schemas/Book'
        400:
          $ref: '#/components/responses/BadRequestResponse'
        403:
          $ref: '#/components/responses/ForbiddenResponse'
        500:
          $ref: '#/components/responses/ServerErrorResponse'

  /authors:
    get:
      summary: Get all authors with pagination
      parameters:
        - $ref: '#/components/parameters/queryPagination'
        - $ref: '#/components/parameters/pathPagination'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/BaseResponse'
                  - type: object
                    properties:
                      body:
                        type: array
                        items:
                          $ref: '#/components/schemas/Author'
        400:
          $ref: '#/components/responses/BadRequestResponse'
        403:
          $ref: '#/components/responses/ForbiddenResponse'
        500:
          $ref: '#/components/responses/ServerErrorResponse'

  /books/import:
    post:
      summary: Import books from JSON or Excel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ImportBook'
          application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
            schema:
              type: string
              format: binary
      responses:
        200:
          description: Books imported successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/BaseResponse'
                  - type: object
                    properties:
                      body:
                        type: array
                        items:
                          $ref: '#/components/schemas/Book'
        400:
          $ref: '#/components/responses/BadRequestResponse'
        500:
          $ref: '#/components/responses/ServerErrorResponse'

  /authors/import:
    post:
      summary: Import authors from JSON or Excel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ImportAuthor'
          application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
            schema:
              type: string
              format: binary
      responses:
        200:
          description: Authors imported successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/BaseResponse'
                  - type: object
                    properties:
                      body:
                        type: array
                        items:
                          $ref: '#/components/schemas/Author'
        400:
          $ref: '#/components/responses/BadRequestResponse'
        500:
          $ref: '#/components/responses/ServerErrorResponse'

components:
  parameters:
    queryPagination:
      name: page
      in: query
      description: The page number to retrieve
      required: false
      schema:
        type: integer
        minimum: 1
        default: 1
    pathPagination:
      name: pageSize
      in: query
      description: Number of results per page
      required: false
      schema:
        type: integer
        minimum: 1
        default: 10

  schemas:
    BaseResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        body:
          type: object
          description: The response payload

    Status:
      type: object
      properties:
        code:
          type: integer
          description: HTTP status code
        message:
          type: string
          description: Status description

    Book:
      type: object
      properties:
        id:
          type: integer
        bookName:
          type: string
        author:
          type: string
        pageNumbers:
          type: integer
        topic:
          type: string
        releaseDate:
          type: string
          format: date

    Author:
      type: object
      properties:
        id:
          type: integer
        authorName:
          type: string
        sex:
          type: string

    ImportBook:
      type: object
      properties:
        bookName:
          type: string
        author:
          type: string
        pageNumbers:
          type: integer
        topic:
          type: string
        releaseDate:
          type: string
          format: date
        idAuthor:
          type: integer

    ImportAuthor:
      type: object
      properties:
        authorName:
          type: string
        sex:
          type: string

  responses:
    BadRequestResponse:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseResponse'
    ForbiddenResponse:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseResponse'
    ServerErrorResponse:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseResponse'
